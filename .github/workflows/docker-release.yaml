name: Build and Publish Docker Images after create release tag

on:
  push:
    branches:
      - main

jobs:
  build-image:
    runs-on: ubuntu-22.04
    steps:
# TODO construct tag, apply tag
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Atlantis version
        id: atlantis-version
        shell: bash
        run: |
          source ./version.env
          echo "ATLANTIS_VERSION=$ATLANTIS_VERSION" >> "$GITHUB_OUTPUT"

      - name: Construct tag
        shell: bash
        run: |
          latest_version_tag=$( git tag --sort=-committerdate -l "${{ steps.atlantis-version.outputs.ATLANTIS_VERSION }}-v*" | head -n 1)
          if [ -z "$latest_version_tag"] then 
            tag="${{ steps.atlantis-version.outputs.ATLANTIS_VERSION }}-v1"
            echo $tag
          else 
            

      - name: Construct tag
        shell: bash
        run: |

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/lablabs/atlantis
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=${{ steps.atlantis-version.outputs.ATLANTIS_VERSION }}-${{ github.event.pull_request.head.sha }}

      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            ATLANTIS_VERSION=${{ steps.atlantis-version.outputs.ATLANTIS_VERSION }}
          file: ./${{ env.DOCKERFILE }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true